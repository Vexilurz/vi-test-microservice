version: '3'

networks:
  backend:

services:

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./project:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx/
    depends_on:
      - php
      - mysql
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/logs:/var/log/mysql/
      - ./mysql/dump:/dump
    ports:
      - "${MYSQL_PORT}:3306"
    security_opt:
      - seccomp:unconfined
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend

  php:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_PHP_VERSION: '8.0'
        DOCKER_PHP_ENABLE_XDEBUG: ${DOCKER_PHP_ENABLE_XDEBUG}
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /var/www
    container_name: php
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./project:/var/www
      - ./php.ini:/usr/local/etc/php/php.ini
      - ./php-workers/supervisor.d:/etc/supervisor.d
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - backend

  composer:
    image: composer:latest
    container_name: composer-update
    working_dir: /var/www
    command: [ "composer", "update" ]
    volumes:
      - ./project:/var/www